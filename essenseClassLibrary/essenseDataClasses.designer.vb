'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="essensetest")>  _
Partial Public Class essenseDataClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.essenseClassLibrary.My.MySettings.Default.essensetestConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsertDepartment")>  _
	Public Function InsertDepartment(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Department_Name", DbType:="NVarChar(MAX)")> ByVal department_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal languageId As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isdeleted As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), department_Name, languageId, isdeleted)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectAllCoursesBylanugaeID")>  _
	Public Function SelectAllCoursesBylanugaeID(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LanguageID", DbType:="Int")> ByVal languageID As System.Nullable(Of Integer)) As ISingleResult(Of SelectAllCoursesBylanugaeIDResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), languageID)
		Return CType(result.ReturnValue,ISingleResult(Of SelectAllCoursesBylanugaeIDResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectAllDepartmentByLanguageID")>  _
	Public Function SelectAllDepartmentByLanguageID(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LanguageId", DbType:="Int")> ByVal languageId As System.Nullable(Of Integer)) As ISingleResult(Of SelectAllDepartmentByLanguageIDResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), languageId)
		Return CType(result.ReturnValue,ISingleResult(Of SelectAllDepartmentByLanguageIDResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.updateCourses")>  _
	Public Function updateCourses(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ID", DbType:="Int")> ByVal iD As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Course_Preid", DbType:="Int")> ByVal course_Preid As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Department_ID", DbType:="Int")> ByVal department_ID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Course_Name", DbType:="NVarChar(MAX)")> ByVal course_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Course_Code", DbType:="NVarChar(MAX)")> ByVal course_Code As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Course_Description", DbType:="NVarChar(MAX)")> ByVal course_Description As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IsDeleted", DbType:="Bit")> ByVal isDeleted As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal languageID As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), iD, course_Preid, department_ID, course_Name, course_Code, course_Description, isDeleted, languageID)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectAllselfjoinCourses", IsComposable:=true)>  _
	Public Function SelectAllselfjoinCourses(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LanguageID", DbType:="Int")> ByVal languageID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Course_id", DbType:="Int")> ByVal course_id As System.Nullable(Of Integer)) As Object
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), languageID, course_id).ReturnValue,Object)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectAllCoursesjoinByylanugaeID")>  _
	Public Function SelectAllCoursesjoinByylanugaeID(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LanguageID", DbType:="Int")> ByVal languageID As System.Nullable(Of Integer)) As ISingleResult(Of SelectAllCoursesjoinByylanugaeIDResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), languageID)
		Return CType(result.ReturnValue,ISingleResult(Of SelectAllCoursesjoinByylanugaeIDResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SelectAllDepartmentByLanguageID")>  _
	Public Function SelectAllDepartmentByLanguageID1(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LanguageID", DbType:="Int")> ByVal languageID As System.Nullable(Of Integer)) As ISingleResult(Of SelectAllDepartmentByLanguageIDResult1)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), languageID)
		Return CType(result.ReturnValue,ISingleResult(Of SelectAllDepartmentByLanguageIDResult1))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsertCourses")>  _
	Public Function InsertCourses(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Department_ID", DbType:="Int")> ByVal department_ID As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Course_Name", DbType:="NVarChar(MAX)")> ByVal course_Name As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Course_Code", DbType:="NVarChar(MAX)")> ByVal course_Code As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Course_Description", DbType:="NVarChar(MAX)")> ByVal course_Description As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IsDeleted", DbType:="Bit")> ByVal isDeleted As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal languageID As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), department_ID, course_Name, course_Code, course_Description, isDeleted, languageID)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsertPrerequisite")>  _
	Public Function InsertPrerequisite(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal course_id As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="NVarChar(MAX)")> ByVal prerequisite_course_id As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal languageID As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), course_id, prerequisite_course_id, languageID)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

Partial Public Class SelectAllCoursesBylanugaeIDResult
	
	Private _ID As Integer
	
	Private _Course_Preid As System.Nullable(Of Integer)
	
	Private _Department_ID As System.Nullable(Of Integer)
	
	Private _Course_Name As String
	
	Private _Course_Code As String
	
	Private _Course_Description As String
	
	Private _IsDeleted As System.Nullable(Of Boolean)
	
	Private _languageID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Course_Preid", DbType:="Int")>  _
	Public Property Course_Preid() As System.Nullable(Of Integer)
		Get
			Return Me._Course_Preid
		End Get
		Set
			If (Me._Course_Preid.Equals(value) = false) Then
				Me._Course_Preid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department_ID", DbType:="Int")>  _
	Public Property Department_ID() As System.Nullable(Of Integer)
		Get
			Return Me._Department_ID
		End Get
		Set
			If (Me._Department_ID.Equals(value) = false) Then
				Me._Department_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Course_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Course_Name() As String
		Get
			Return Me._Course_Name
		End Get
		Set
			If (String.Equals(Me._Course_Name, value) = false) Then
				Me._Course_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Course_Code", DbType:="NVarChar(MAX)")>  _
	Public Property Course_Code() As String
		Get
			Return Me._Course_Code
		End Get
		Set
			If (String.Equals(Me._Course_Code, value) = false) Then
				Me._Course_Code = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Course_Description", DbType:="NVarChar(MAX)")>  _
	Public Property Course_Description() As String
		Get
			Return Me._Course_Description
		End Get
		Set
			If (String.Equals(Me._Course_Description, value) = false) Then
				Me._Course_Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit")>  _
	Public Property IsDeleted() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDeleted
		End Get
		Set
			If (Me._IsDeleted.Equals(value) = false) Then
				Me._IsDeleted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_languageID", DbType:="Int")>  _
	Public Property languageID() As System.Nullable(Of Integer)
		Get
			Return Me._languageID
		End Get
		Set
			If (Me._languageID.Equals(value) = false) Then
				Me._languageID = value
			End If
		End Set
	End Property
End Class

Partial Public Class SelectAllDepartmentByLanguageIDResult
	
	Private _ID As Integer
	
	Private _Department_Name As String
	
	Private _languageID As System.Nullable(Of Integer)
	
	Private _IsDeleted As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Department_Name() As String
		Get
			Return Me._Department_Name
		End Get
		Set
			If (String.Equals(Me._Department_Name, value) = false) Then
				Me._Department_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_languageID", DbType:="Int")>  _
	Public Property languageID() As System.Nullable(Of Integer)
		Get
			Return Me._languageID
		End Get
		Set
			If (Me._languageID.Equals(value) = false) Then
				Me._languageID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit")>  _
	Public Property IsDeleted() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDeleted
		End Get
		Set
			If (Me._IsDeleted.Equals(value) = false) Then
				Me._IsDeleted = value
			End If
		End Set
	End Property
End Class

Partial Public Class SelectAllCoursesjoinByylanugaeIDResult
	
	Private _course_name As String
	
	Private _course_name1 As String
	
	Private _prerequisite_course_id As System.Nullable(Of Integer)
	
	Private _ID As Integer
	
	Private _languageID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_course_name", DbType:="NVarChar(MAX)")>  _
	Public Property course_name() As String
		Get
			Return Me._course_name
		End Get
		Set
			If (String.Equals(Me._course_name, value) = false) Then
				Me._course_name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_course_name1", DbType:="NVarChar(MAX)")>  _
	Public Property course_name1() As String
		Get
			Return Me._course_name1
		End Get
		Set
			If (String.Equals(Me._course_name1, value) = false) Then
				Me._course_name1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prerequisite_course_id", DbType:="Int")>  _
	Public Property prerequisite_course_id() As System.Nullable(Of Integer)
		Get
			Return Me._prerequisite_course_id
		End Get
		Set
			If (Me._prerequisite_course_id.Equals(value) = false) Then
				Me._prerequisite_course_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_languageID", DbType:="Int")>  _
	Public Property languageID() As System.Nullable(Of Integer)
		Get
			Return Me._languageID
		End Get
		Set
			If (Me._languageID.Equals(value) = false) Then
				Me._languageID = value
			End If
		End Set
	End Property
End Class

Partial Public Class SelectAllDepartmentByLanguageIDResult1
	
	Private _ID As Integer
	
	Private _Department_Name As String
	
	Private _languageID As System.Nullable(Of Integer)
	
	Private _IsDeleted As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department_Name", DbType:="NVarChar(MAX)")>  _
	Public Property Department_Name() As String
		Get
			Return Me._Department_Name
		End Get
		Set
			If (String.Equals(Me._Department_Name, value) = false) Then
				Me._Department_Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_languageID", DbType:="Int")>  _
	Public Property languageID() As System.Nullable(Of Integer)
		Get
			Return Me._languageID
		End Get
		Set
			If (Me._languageID.Equals(value) = false) Then
				Me._languageID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit")>  _
	Public Property IsDeleted() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDeleted
		End Get
		Set
			If (Me._IsDeleted.Equals(value) = false) Then
				Me._IsDeleted = value
			End If
		End Set
	End Property
End Class
